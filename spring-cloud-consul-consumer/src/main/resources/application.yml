server:
  port: 9092
spring:
  application:
    name: spring-cloud-consul-consumer
  cloud:
    consul:
      host: 127.0.0.1 
      port: 8500        
      discovery:
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}  
        health-check-path: /actuator/health                                                      
        health-check-interval: 10s
#redis集群
  redis:
     cluster:
       nodes: 192.168.111.135:9001,192.168.111.135:9002,192.168.111.135:9003,192.168.111.135:9004,192.168.111.135:9005,192.168.111.135:9006
     database: 0
     jedis: 
       pool:
         max-active: 300
         max-wait: 3s
         max-idle: 100
         min-idle: 20
     timeout: 60000
  #mycat或mysql数据源
  datasource:
        name: test
        #连接mycat
        #url: jdbc:mysql://192.168.111.135:8066/TESTDB
        #连接mysql
        url: jdbc:mysql://192.168.111.134:3306/db1?useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        #连接mycat的密码
        #password: 123456 
        password: Passwd123!
        driver-class-name: com.mysql.jdbc.Driver
       
mybatis:
  mapper-locations: classpath:mapping/*.xml  #mapper映射xml文件的所在路径
  type-aliases-package: com.woasis.consulconsumer.model  # 对应实体类的路径
  
# 开启feign支持hystrix，默认关闭
feign:
  hystrix:
    enabled: true 
#熔断器线程隔离相关配置
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
      isolation:
        strategy: threadPool
        thread:
          #请求超时时间
          timeoutInMilliseconds: 5000
      #熔断器处理请求、触发熔断机制的相关配置
      circuitBreaker: 
        enabled: true
        requestVolumeThreshold: 3 #滑动窗口时间20个请求失败即打开熔断
        sleepWindowInMilliseconds: 50000 #打开熔断器后，5秒后尝试发送自动检测请求
        errorThresholdPercentage: 50 #失败比例达到50%，打开熔断
#      metrics:
#        rollingStats:
#          #Hystrix统计滑动窗口的时间，单位为毫秒，默认设置为10000毫秒，即一个滑动窗口默认统计的是10秒内的请求数据。
#          timeInMilliseconds: 10000
#          #此属性指定了滑动统计窗口划分的桶数。默认为10。
#          #需要注意的是，metrics.rollingStats.timeInMilliseconds % metrics.rollingStats.numBuckets == 0必须成立，否则就会抛出异常
#          numBuckets: 10
#        rollingPercentile:
#          #说明1：此属性配置统计方法是否响应时间百分比，默认为true。
#          #说明2：Hystrix会统计方法执行1%，10%，50%，90%，99%等比例请求的平均耗时用来生成统计图表。
#          #说明3：如果禁用该参数设置false,那么所有汇总统计信息（平均值、百分位数）将返回-1。
#          enabled: true
#          #说明：统计响应时间百分比时的窗口大小，默认为60000毫秒，即1分钟
#          timeInMilliseconds: 60000
#          #说明1：此属性用于设置滑动百分比窗口要划分的桶数，默认为6。
#          #说明2：需要注意的是，metrics.rollingPercentile.timeInMilliseconds % metrics.rollingPercentile.numBuckets == 0必须成立，否则会抛出异常
#          numBuckets: 6
#          #说明1：该属性表示统计响应时间百分比，每个滑动窗口的桶内要保存的请求数，默认为100。
#          #说明2：即默认10秒的桶内，如果执行了500次请求，那么只有最后100次请求执行的信息会被保存到桶内。
#          #说明3：增加这个值会增加内存消耗量，一般情况下无需更改。
#          bucketSize: 100
#        healthSnapshot:
#          #说明1：该参数配置了健康数据统计器（会影响Hystrix熔断）中每个桶的大小，默认为500毫秒。
#          #说明2：在统计时Hystrix通过metrics.rollingStats.timeInMilliseconds / metrics.healthSnapshot.intervalInMilliseconds计算出桶数。
#          #说明3：在窗口滑动时，每滑过一个桶的时间就统计一次当前窗口内请求的失败率。
#          intervalInMilliseconds: 500

ribbon:
  #ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
  connectTimeout: 5000
  #请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout,超时时间不可大于断路器的超时时间
  readTimeout: 5000
  
